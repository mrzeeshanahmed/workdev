name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: windows-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install functions deps
        working-directory: functions
        run: npm ci

      - name: Install frontend deps
        working-directory: frontend
        run: npm ci

      - name: Run ESLint
        working-directory: frontend
        run: npx eslint "src/**/*.{ts,tsx,js,jsx}" --max-warnings 0

      - name: Run frontend tests
        working-directory: frontend
        env:
          TOTP_ENCRYPTION_KEY: ${{ secrets.TOTP_ENCRYPTION_KEY }}
          FUNCTIONS_PORT: 54323
          VITE_SUPABASE_URL: 'http://localhost'
          VITE_SUPABASE_ANON_KEY: 'anon'
        run: |
          # Start functions dev server in background and capture PID
          Write-Host 'Starting functions dev server'
          Start-Process -NoNewWindow -WorkingDirectory ../functions -FilePath npm -ArgumentList 'run','dev' -PassThru | ForEach-Object { $_.Id } > server.pid
          $pid = Get-Content server.pid
          Write-Host "Functions server PID: $pid"

          # Wait for the functions server to be ready by polling the health endpoint
          $base = "http://localhost:54323/functions/v1"
          $ready = $false
          for ($i=0; $i -lt 30; $i++) {
            try {
              $r = Invoke-WebRequest -Uri "$base/health" -UseBasicParsing -TimeoutSec 2 -ErrorAction Stop
              if ($r.StatusCode -eq 200) { $ready = $true; break }
            } catch { Start-Sleep -s 1 }
          }
          if (-not $ready) { Write-Error 'Functions dev server did not become ready'; exit 1 }

          # Run only integration tests that target functions endpoints
          npx --yes vitest run ../specs/001-title-core-platform/tests/integration --reporter verbose

          # Tear down the server
          Write-Host 'Stopping functions dev server'
          Stop-Process -Id $pid -Force || true
# Consolidated CI workflow above runs lint and all tests (unit + integration)
