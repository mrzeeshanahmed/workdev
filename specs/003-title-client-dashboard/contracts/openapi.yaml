openapi: 3.0.3
info:
  title: Client Dashboard API (specs/003-title-client-dashboard)
  version: 0.1.0
paths:
  /api/projects:
    post:
      summary: Create a project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [title, description, type, budget_min]
              properties:
                title:
                  type: string
                description:
                  type: string
                type:
                  type: string
                  enum: [fixed, hourly]
                budget_min:
                  type: number
                budget_max:
                  type: number
                skills:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
  /api/projects:
    get:
      summary: List projects (filters + pagination)
      parameters:
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: skills
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Project'
  /api/projects/{projectId}:
    get:
      summary: Get project by id
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
  /api/projects/{projectId}/proposals:
    post:
      summary: Create a proposal for a project
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [cover_letter]
              properties:
                cover_letter:
                  type: string
                amount:
                  type: number
                hours_estimate:
                  type: integer
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal'
components:
  schemas:
    Project:
      type: object
      properties:
        id:
          type: string
        owner_id:
          type: string
        title:
          type: string
        description:
          type: string
        type:
          type: string
        budget_min:
          type: number
        budget_max:
          type: number
        skills:
          type: array
          items:
            type: string
        status:
          type: string
        created_at:
          type: string
          format: date-time
    Proposal:
      type: object
      properties:
        id:
          type: string
        project_id:
          type: string
        applicant_id:
          type: string
        cover_letter:
          type: string
        amount:
          type: number
        hours_estimate:
          type: integer
        status:
          type: string
        created_at:
          type: string
          format: date-time
